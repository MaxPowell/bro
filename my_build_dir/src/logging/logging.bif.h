// This file was automatically generated by bifcl from /home/ubuntu/bro/src/logging/logging.bif (alternative mode).

#if defined(BRO_IN_NETVAR) || ! defined(_home_ubuntu_bro_my_build_dir_src_logging_logging_bif)
#ifndef BRO_IN_NETVAR
#ifndef _home_ubuntu_bro_my_build_dir_src_logging_logging_bif
#define _home_ubuntu_bro_my_build_dir_src_logging_logging_bif
#include "bro-bif.h"
#endif
#endif

namespace BifType { namespace Record{ namespace Log {  extern RecordType * Filter;  } } }
namespace BifType { namespace Record{ namespace Log {  extern RecordType * Stream;  } } }
namespace BifType { namespace Record{ namespace Log {  extern RecordType * RotationInfo;  } } }
namespace BifFunc { namespace Log { extern Val* bro___create_stream(Frame* frame, val_list*); }  }
namespace BifFunc { namespace Log { extern Val* bro___remove_stream(Frame* frame, val_list*); }  }
namespace BifFunc { namespace Log { extern Val* bro___enable_stream(Frame* frame, val_list*); }  }
namespace BifFunc { namespace Log { extern Val* bro___disable_stream(Frame* frame, val_list*); }  }
namespace BifFunc { namespace Log { extern Val* bro___add_filter(Frame* frame, val_list*); }  }
namespace BifFunc { namespace Log { extern Val* bro___remove_filter(Frame* frame, val_list*); }  }
namespace BifFunc { namespace Log { extern Val* bro___write(Frame* frame, val_list*); }  }
namespace BifFunc { namespace Log { extern Val* bro___set_buf(Frame* frame, val_list*); }  }
namespace BifFunc { namespace Log { extern Val* bro___flush(Frame* frame, val_list*); }  }

#endif
