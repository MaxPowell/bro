// This file was automatically generated by bifcl from types.bif.

namespace BifEnum { enum rpc_status {
	RPC_SUCCESS,
	RPC_PROG_UNAVAIL,
	RPC_PROG_MISMATCH,
	RPC_PROC_UNAVAIL,
	RPC_GARBAGE_ARGS,
	RPC_SYSTEM_ERR,
	RPC_TIMEOUT,
	RPC_VERS_MISMATCH,
	RPC_AUTH_ERROR,
	RPC_UNKNOWN_ERROR,
}; }
namespace BifType { namespace Enum{  extern EnumType * rpc_status;  } }
namespace BifEnum { namespace MOUNT3 { enum proc_t {
	PROC_NULL = 0,
	PROC_MNT = 1,
	PROC_DUMP = 2,
	PROC_UMNT = 3,
	PROC_UMNT_ALL = 4,
	PROC_EXPORT = 5,
	PROC_END_OF_PROCS = 6,
}; } }
namespace BifType { namespace Enum{ namespace MOUNT3 {  extern EnumType * proc_t;  } } }
namespace BifEnum { namespace MOUNT3 { enum status_t {
	MNT3_OK = 0,
	MNT3ERR_PERM = 1,
	MNT3ERR_NOENT = 2,
	MNT3ERR_IO = 5,
	MNT3ERR_ACCES = 13,
	MNT3ERR_NOTDIR = 20,
	MNT3ERR_INVAL = 22,
	MNT3ERR_NAMETOOLONG = 63,
	MNT3ERR_NOTSUPP = 10004,
	MNT3ERR_SERVERFAULT = 10006,
	MOUNT3ERR_UNKNOWN = 0xffffffff,
}; } }
namespace BifType { namespace Enum{ namespace MOUNT3 {  extern EnumType * status_t;  } } }
namespace BifEnum { namespace MOUNT3 { enum auth_flavor_t {
	AUTH_NULL = 0,
	AUTH_UNIX = 1,
	AUTH_SHORT = 2,
	AUTH_DES = 3,
}; } }
namespace BifType { namespace Enum{ namespace MOUNT3 {  extern EnumType * auth_flavor_t;  } } }
namespace BifType { namespace Record{ namespace MOUNT3 {  extern RecordType * info_t;  } } }
namespace BifType { namespace Record{ namespace MOUNT3 {  extern RecordType * mnt_reply_t;  } } }
namespace BifType { namespace Record{ namespace MOUNT3 {  extern RecordType * dirmntargs_t;  } } }
namespace BifEnum { namespace NFS3 { enum proc_t {
	PROC_NULL = 0,
	PROC_GETATTR = 1,
	PROC_SETATTR = 2,
	PROC_LOOKUP = 3,
	PROC_ACCESS = 4,
	PROC_READLINK = 5,
	PROC_READ = 6,
	PROC_WRITE = 7,
	PROC_CREATE = 8,
	PROC_MKDIR = 9,
	PROC_SYMLINK = 10,
	PROC_MKNOD = 11,
	PROC_REMOVE = 12,
	PROC_RMDIR = 13,
	PROC_RENAME = 14,
	PROC_LINK = 15,
	PROC_READDIR = 16,
	PROC_READDIRPLUS = 17,
	PROC_FSSTAT = 18,
	PROC_FSINFO = 19,
	PROC_PATHCONF = 20,
	PROC_COMMIT = 21,
	PROC_END_OF_PROCS = 22,
}; } }
namespace BifType { namespace Enum{ namespace NFS3 {  extern EnumType * proc_t;  } } }
namespace BifEnum { namespace NFS3 { enum status_t {
	NFS3ERR_OK = 0,
	NFS3ERR_PERM = 1,
	NFS3ERR_NOENT = 2,
	NFS3ERR_IO = 5,
	NFS3ERR_NXIO = 6,
	NFS3ERR_ACCES = 13,
	NFS3ERR_EXIST = 17,
	NFS3ERR_XDEV = 18,
	NFS3ERR_NODEV = 19,
	NFS3ERR_NOTDIR = 20,
	NFS3ERR_ISDIR = 21,
	NFS3ERR_INVAL = 22,
	NFS3ERR_FBIG = 27,
	NFS3ERR_NOSPC = 28,
	NFS3ERR_ROFS = 30,
	NFS3ERR_MLINK = 31,
	NFS3ERR_NAMETOOLONG = 63,
	NFS3ERR_NOTEMPTY = 66,
	NFS3ERR_DQUOT = 69,
	NFS3ERR_STALE = 70,
	NFS3ERR_REMOTE = 71,
	NFS3ERR_BADHANDLE = 10001,
	NFS3ERR_NOT_SYNC = 10002,
	NFS3ERR_BAD_COOKIE = 10003,
	NFS3ERR_NOTSUPP = 10004,
	NFS3ERR_TOOSMALL = 10005,
	NFS3ERR_SERVERFAULT = 10006,
	NFS3ERR_BADTYPE = 10007,
	NFS3ERR_JUKEBOX = 10008,
	NFS3ERR_UNKNOWN = 0xffffffff,
}; } }
namespace BifType { namespace Enum{ namespace NFS3 {  extern EnumType * status_t;  } } }
namespace BifEnum { namespace NFS3 { enum time_how_t {
	DONT_CHANGE = 0,
	SET_TO_SERVER_TIME = 1,
	SET_TO_CLIENT_TIME = 2,
}; } }
namespace BifType { namespace Enum{ namespace NFS3 {  extern EnumType * time_how_t;  } } }
namespace BifEnum { namespace NFS3 { enum file_type_t {
	FTYPE_REG = 1,
	FTYPE_DIR = 2,
	FTYPE_BLK = 3,
	FTYPE_CHR = 4,
	FTYPE_LNK = 5,
	FTYPE_SOCK = 6,
	FTYPE_FIFO = 7,
}; } }
namespace BifType { namespace Enum{ namespace NFS3 {  extern EnumType * file_type_t;  } } }
namespace BifEnum { namespace NFS3 { enum stable_how_t {
	UNSTABLE = 0,
	DATA_SYNC = 1,
	FILE_SYNC = 2,
}; } }
namespace BifType { namespace Enum{ namespace NFS3 {  extern EnumType * stable_how_t;  } } }
namespace BifEnum { namespace NFS3 { enum createmode_t {
	UNCHECKED = 0,
	GUARDED = 1,
	EXCLUSIVE = 2,
}; } }
namespace BifType { namespace Enum{ namespace NFS3 {  extern EnumType * createmode_t;  } } }
namespace BifType { namespace Record{ namespace NFS3 {  extern RecordType * info_t;  } } }
namespace BifType { namespace Record{ namespace NFS3 {  extern RecordType * fattr_t;  } } }
namespace BifType { namespace Record{ namespace NFS3 {  extern RecordType * sattr_t;  } } }
namespace BifType { namespace Record{ namespace NFS3 {  extern RecordType * symlinkdata_t;  } } }
namespace BifType { namespace Record{ namespace NFS3 {  extern RecordType * diropargs_t;  } } }
namespace BifType { namespace Record{ namespace NFS3 {  extern RecordType * symlinkargs_t;  } } }
namespace BifType { namespace Record{ namespace NFS3 {  extern RecordType * sattrargs_t;  } } }
namespace BifType { namespace Record{ namespace NFS3 {  extern RecordType * linkargs_t;  } } }
namespace BifType { namespace Record{ namespace NFS3 {  extern RecordType * renameopargs_t;  } } }
namespace BifType { namespace Record{ namespace NFS3 {  extern RecordType * sattr_reply_t;  } } }
namespace BifType { namespace Record{ namespace NFS3 {  extern RecordType * lookup_reply_t;  } } }
namespace BifType { namespace Record{ namespace NFS3 {  extern RecordType * readargs_t;  } } }
namespace BifType { namespace Record{ namespace NFS3 {  extern RecordType * read_reply_t;  } } }
namespace BifType { namespace Record{ namespace NFS3 {  extern RecordType * readlink_reply_t;  } } }
namespace BifType { namespace Record{ namespace NFS3 {  extern RecordType * link_reply_t;  } } }
namespace BifType { namespace Record{ namespace NFS3 {  extern RecordType * writeargs_t;  } } }
namespace BifType { namespace Record{ namespace NFS3 {  extern RecordType * wcc_attr_t;  } } }
namespace BifType { namespace Record{ namespace NFS3 {  extern RecordType * write_reply_t;  } } }
namespace BifType { namespace Record{ namespace NFS3 {  extern RecordType * newobj_reply_t;  } } }
namespace BifType { namespace Record{ namespace NFS3 {  extern RecordType * delobj_reply_t;  } } }
namespace BifType { namespace Record{ namespace NFS3 {  extern RecordType * renameobj_reply_t;  } } }
namespace BifType { namespace Record{ namespace NFS3 {  extern RecordType * readdirargs_t;  } } }
namespace BifType { namespace Record{ namespace NFS3 {  extern RecordType * direntry_t;  } } }
namespace BifType { namespace Vector{ namespace NFS3 {  extern VectorType * direntry_vec_t;  } } }
namespace BifType { namespace Record{ namespace NFS3 {  extern RecordType * readdir_reply_t;  } } }
namespace BifType { namespace Record{ namespace NFS3 {  extern RecordType * fsstat_t;  } } }
namespace BifType { namespace Record{  extern RecordType * ModbusHeaders;  } }
namespace BifType { namespace Vector{  extern VectorType * ModbusCoils;  } }
namespace BifType { namespace Vector{  extern VectorType * ModbusRegisters;  } }
namespace BifType { namespace Record{ namespace PE {  extern RecordType * DOSHeader;  } } }
namespace BifType { namespace Record{ namespace PE {  extern RecordType * FileHeader;  } } }
namespace BifType { namespace Record{ namespace PE {  extern RecordType * OptionalHeader;  } } }
namespace BifType { namespace Record{ namespace PE {  extern RecordType * SectionHeader;  } } }
namespace BifEnum { namespace Tunnel { enum Type {
	NONE,
	IP,
	AYIYA,
	TEREDO,
	SOCKS,
	GTPv1,
	HTTP,
	GRE,
}; } }
namespace BifType { namespace Enum{ namespace Tunnel {  extern EnumType * Type;  } } }
namespace BifType { namespace Record{ namespace Tunnel {  extern RecordType * EncapsulatingConn;  } } }
namespace BifEnum { enum link_encap {
	LINK_ETHERNET,
	LINK_UNKNOWN,
}; }
namespace BifType { namespace Enum{  extern EnumType * link_encap;  } }
namespace BifEnum { enum layer3_proto {
	L3_IPV4,
	L3_IPV6,
	L3_ARP,
	L3_UNKNOWN,
}; }
namespace BifType { namespace Enum{  extern EnumType * layer3_proto;  } }
namespace BifType { namespace Record{  extern RecordType * gtpv1_hdr;  } }
namespace BifType { namespace Record{  extern RecordType * gtp_create_pdp_ctx_request_elements;  } }
namespace BifType { namespace Record{  extern RecordType * gtp_create_pdp_ctx_response_elements;  } }
namespace BifType { namespace Record{  extern RecordType * gtp_update_pdp_ctx_request_elements;  } }
namespace BifType { namespace Record{  extern RecordType * gtp_update_pdp_ctx_response_elements;  } }
namespace BifType { namespace Record{  extern RecordType * gtp_delete_pdp_ctx_request_elements;  } }
namespace BifType { namespace Record{  extern RecordType * gtp_delete_pdp_ctx_response_elements;  } }
namespace BifType { namespace Record{  extern RecordType * gtp_end_user_addr;  } }
namespace BifType { namespace Record{  extern RecordType * gtp_rai;  } }
namespace BifType { namespace Record{  extern RecordType * gtp_qos_profile;  } }
namespace BifType { namespace Record{  extern RecordType * gtp_private_extension;  } }
namespace BifType { namespace Record{  extern RecordType * gtp_gsn_addr;  } }
namespace BifEnum { namespace Reporter { enum Level {
	INFO = 0,
	WARNING = 1,
	ERROR = 2,
}; } }
namespace BifType { namespace Enum{ namespace Reporter {  extern EnumType * Level;  } } }
