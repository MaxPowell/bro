// This file was automatically generated by bifcl from /home/ubuntu/bro/src/analyzer/protocol/smb/smb1_com_negotiate.bif (plugin mode).


#include <list>
#include <string>
#include "plugin/Plugin.h"
#include "smb1_com_negotiate.bif.h"

namespace plugin { namespace Bro_SMB {

void __bif_smb1_com_negotiate_init(plugin::Plugin* plugin)
	{
	::smb1_negotiate_request = internal_handler("smb1_negotiate_request");
	plugin->AddBifItem("smb1_negotiate_request", plugin::BifItem::EVENT);
	::smb1_negotiate_response = internal_handler("smb1_negotiate_response");
	plugin->AddBifItem("smb1_negotiate_response", plugin::BifItem::EVENT);
	BifType::Record::SMB1::NegotiateResponse = internal_type("SMB1::NegotiateResponse")->AsRecordType();
	plugin->AddBifItem("SMB1::NegotiateResponse", plugin::BifItem::TYPE);
	BifType::Record::SMB1::NegotiateResponseCore = internal_type("SMB1::NegotiateResponseCore")->AsRecordType();
	plugin->AddBifItem("SMB1::NegotiateResponseCore", plugin::BifItem::TYPE);
	BifType::Record::SMB1::NegotiateResponseLANMAN = internal_type("SMB1::NegotiateResponseLANMAN")->AsRecordType();
	plugin->AddBifItem("SMB1::NegotiateResponseLANMAN", plugin::BifItem::TYPE);
	BifType::Record::SMB1::NegotiateResponseNTLM = internal_type("SMB1::NegotiateResponseNTLM")->AsRecordType();
	plugin->AddBifItem("SMB1::NegotiateResponseNTLM", plugin::BifItem::TYPE);
	BifType::Record::SMB1::NegotiateResponseSecurity = internal_type("SMB1::NegotiateResponseSecurity")->AsRecordType();
	plugin->AddBifItem("SMB1::NegotiateResponseSecurity", plugin::BifItem::TYPE);
	BifType::Record::SMB1::NegotiateRawMode = internal_type("SMB1::NegotiateRawMode")->AsRecordType();
	plugin->AddBifItem("SMB1::NegotiateRawMode", plugin::BifItem::TYPE);
	BifType::Record::SMB1::NegotiateCapabilities = internal_type("SMB1::NegotiateCapabilities")->AsRecordType();
	plugin->AddBifItem("SMB1::NegotiateCapabilities", plugin::BifItem::TYPE);

	}
} }


