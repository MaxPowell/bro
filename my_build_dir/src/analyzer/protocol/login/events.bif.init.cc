// This file was automatically generated by bifcl from /home/ubuntu/bro/src/analyzer/protocol/login/events.bif (plugin mode).


#include <list>
#include <string>
#include "plugin/Plugin.h"
#include "events.bif.h"

namespace plugin { namespace Bro_Login {

void __bif_events_init(plugin::Plugin* plugin)
	{
	::rsh_request = internal_handler("rsh_request");
	plugin->AddBifItem("rsh_request", plugin::BifItem::EVENT);
	::rsh_reply = internal_handler("rsh_reply");
	plugin->AddBifItem("rsh_reply", plugin::BifItem::EVENT);
	::login_failure = internal_handler("login_failure");
	plugin->AddBifItem("login_failure", plugin::BifItem::EVENT);
	::login_success = internal_handler("login_success");
	plugin->AddBifItem("login_success", plugin::BifItem::EVENT);
	::login_input_line = internal_handler("login_input_line");
	plugin->AddBifItem("login_input_line", plugin::BifItem::EVENT);
	::login_output_line = internal_handler("login_output_line");
	plugin->AddBifItem("login_output_line", plugin::BifItem::EVENT);
	::login_confused = internal_handler("login_confused");
	plugin->AddBifItem("login_confused", plugin::BifItem::EVENT);
	::login_confused_text = internal_handler("login_confused_text");
	plugin->AddBifItem("login_confused_text", plugin::BifItem::EVENT);
	::login_terminal = internal_handler("login_terminal");
	plugin->AddBifItem("login_terminal", plugin::BifItem::EVENT);
	::login_display = internal_handler("login_display");
	plugin->AddBifItem("login_display", plugin::BifItem::EVENT);
	::authentication_accepted = internal_handler("authentication_accepted");
	plugin->AddBifItem("authentication_accepted", plugin::BifItem::EVENT);
	::authentication_rejected = internal_handler("authentication_rejected");
	plugin->AddBifItem("authentication_rejected", plugin::BifItem::EVENT);
	::authentication_skipped = internal_handler("authentication_skipped");
	plugin->AddBifItem("authentication_skipped", plugin::BifItem::EVENT);
	::login_prompt = internal_handler("login_prompt");
	plugin->AddBifItem("login_prompt", plugin::BifItem::EVENT);
	::activating_encryption = internal_handler("activating_encryption");
	plugin->AddBifItem("activating_encryption", plugin::BifItem::EVENT);
	::inconsistent_option = internal_handler("inconsistent_option");
	plugin->AddBifItem("inconsistent_option", plugin::BifItem::EVENT);
	::bad_option = internal_handler("bad_option");
	plugin->AddBifItem("bad_option", plugin::BifItem::EVENT);
	::bad_option_termination = internal_handler("bad_option_termination");
	plugin->AddBifItem("bad_option_termination", plugin::BifItem::EVENT);

	}
} }


