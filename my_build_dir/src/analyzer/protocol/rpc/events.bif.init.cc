// This file was automatically generated by bifcl from /home/ubuntu/bro/src/analyzer/protocol/rpc/events.bif (plugin mode).


#include <list>
#include <string>
#include "plugin/Plugin.h"
#include "events.bif.h"

namespace plugin { namespace Bro_RPC {

void __bif_events_init(plugin::Plugin* plugin)
	{
	::nfs_proc_null = internal_handler("nfs_proc_null");
	plugin->AddBifItem("nfs_proc_null", plugin::BifItem::EVENT);
	::nfs_proc_getattr = internal_handler("nfs_proc_getattr");
	plugin->AddBifItem("nfs_proc_getattr", plugin::BifItem::EVENT);
	::nfs_proc_sattr = internal_handler("nfs_proc_sattr");
	plugin->AddBifItem("nfs_proc_sattr", plugin::BifItem::EVENT);
	::nfs_proc_lookup = internal_handler("nfs_proc_lookup");
	plugin->AddBifItem("nfs_proc_lookup", plugin::BifItem::EVENT);
	::nfs_proc_read = internal_handler("nfs_proc_read");
	plugin->AddBifItem("nfs_proc_read", plugin::BifItem::EVENT);
	::nfs_proc_readlink = internal_handler("nfs_proc_readlink");
	plugin->AddBifItem("nfs_proc_readlink", plugin::BifItem::EVENT);
	::nfs_proc_symlink = internal_handler("nfs_proc_symlink");
	plugin->AddBifItem("nfs_proc_symlink", plugin::BifItem::EVENT);
	::nfs_proc_link = internal_handler("nfs_proc_link");
	plugin->AddBifItem("nfs_proc_link", plugin::BifItem::EVENT);
	::nfs_proc_write = internal_handler("nfs_proc_write");
	plugin->AddBifItem("nfs_proc_write", plugin::BifItem::EVENT);
	::nfs_proc_create = internal_handler("nfs_proc_create");
	plugin->AddBifItem("nfs_proc_create", plugin::BifItem::EVENT);
	::nfs_proc_mkdir = internal_handler("nfs_proc_mkdir");
	plugin->AddBifItem("nfs_proc_mkdir", plugin::BifItem::EVENT);
	::nfs_proc_remove = internal_handler("nfs_proc_remove");
	plugin->AddBifItem("nfs_proc_remove", plugin::BifItem::EVENT);
	::nfs_proc_rmdir = internal_handler("nfs_proc_rmdir");
	plugin->AddBifItem("nfs_proc_rmdir", plugin::BifItem::EVENT);
	::nfs_proc_rename = internal_handler("nfs_proc_rename");
	plugin->AddBifItem("nfs_proc_rename", plugin::BifItem::EVENT);
	::nfs_proc_readdir = internal_handler("nfs_proc_readdir");
	plugin->AddBifItem("nfs_proc_readdir", plugin::BifItem::EVENT);
	::nfs_proc_not_implemented = internal_handler("nfs_proc_not_implemented");
	plugin->AddBifItem("nfs_proc_not_implemented", plugin::BifItem::EVENT);
	::nfs_reply_status = internal_handler("nfs_reply_status");
	plugin->AddBifItem("nfs_reply_status", plugin::BifItem::EVENT);
	::pm_request_null = internal_handler("pm_request_null");
	plugin->AddBifItem("pm_request_null", plugin::BifItem::EVENT);
	::pm_request_set = internal_handler("pm_request_set");
	plugin->AddBifItem("pm_request_set", plugin::BifItem::EVENT);
	::pm_request_unset = internal_handler("pm_request_unset");
	plugin->AddBifItem("pm_request_unset", plugin::BifItem::EVENT);
	::pm_request_getport = internal_handler("pm_request_getport");
	plugin->AddBifItem("pm_request_getport", plugin::BifItem::EVENT);
	::pm_request_dump = internal_handler("pm_request_dump");
	plugin->AddBifItem("pm_request_dump", plugin::BifItem::EVENT);
	::pm_request_callit = internal_handler("pm_request_callit");
	plugin->AddBifItem("pm_request_callit", plugin::BifItem::EVENT);
	::pm_attempt_null = internal_handler("pm_attempt_null");
	plugin->AddBifItem("pm_attempt_null", plugin::BifItem::EVENT);
	::pm_attempt_set = internal_handler("pm_attempt_set");
	plugin->AddBifItem("pm_attempt_set", plugin::BifItem::EVENT);
	::pm_attempt_unset = internal_handler("pm_attempt_unset");
	plugin->AddBifItem("pm_attempt_unset", plugin::BifItem::EVENT);
	::pm_attempt_getport = internal_handler("pm_attempt_getport");
	plugin->AddBifItem("pm_attempt_getport", plugin::BifItem::EVENT);
	::pm_attempt_dump = internal_handler("pm_attempt_dump");
	plugin->AddBifItem("pm_attempt_dump", plugin::BifItem::EVENT);
	::pm_attempt_callit = internal_handler("pm_attempt_callit");
	plugin->AddBifItem("pm_attempt_callit", plugin::BifItem::EVENT);
	::pm_bad_port = internal_handler("pm_bad_port");
	plugin->AddBifItem("pm_bad_port", plugin::BifItem::EVENT);
	::rpc_dialogue = internal_handler("rpc_dialogue");
	plugin->AddBifItem("rpc_dialogue", plugin::BifItem::EVENT);
	::rpc_call = internal_handler("rpc_call");
	plugin->AddBifItem("rpc_call", plugin::BifItem::EVENT);
	::rpc_reply = internal_handler("rpc_reply");
	plugin->AddBifItem("rpc_reply", plugin::BifItem::EVENT);
	::mount_proc_null = internal_handler("mount_proc_null");
	plugin->AddBifItem("mount_proc_null", plugin::BifItem::EVENT);
	::mount_proc_mnt = internal_handler("mount_proc_mnt");
	plugin->AddBifItem("mount_proc_mnt", plugin::BifItem::EVENT);
	::mount_proc_umnt = internal_handler("mount_proc_umnt");
	plugin->AddBifItem("mount_proc_umnt", plugin::BifItem::EVENT);
	::mount_proc_umnt_all = internal_handler("mount_proc_umnt_all");
	plugin->AddBifItem("mount_proc_umnt_all", plugin::BifItem::EVENT);
	::mount_proc_not_implemented = internal_handler("mount_proc_not_implemented");
	plugin->AddBifItem("mount_proc_not_implemented", plugin::BifItem::EVENT);
	::mount_reply_status = internal_handler("mount_reply_status");
	plugin->AddBifItem("mount_reply_status", plugin::BifItem::EVENT);

	}
} }


