// This file was automatically generated by bifcl from /home/ubuntu/bro/src/analyzer/protocol/tcp/events.bif (plugin mode).


#include <list>
#include <string>
#include "plugin/Plugin.h"
#include "events.bif.h"

namespace plugin { namespace Bro_TCP {

void __bif_events_init(plugin::Plugin* plugin)
	{
	::new_connection_contents = internal_handler("new_connection_contents");
	plugin->AddBifItem("new_connection_contents", plugin::BifItem::EVENT);
	::connection_attempt = internal_handler("connection_attempt");
	plugin->AddBifItem("connection_attempt", plugin::BifItem::EVENT);
	::connection_established = internal_handler("connection_established");
	plugin->AddBifItem("connection_established", plugin::BifItem::EVENT);
	::partial_connection = internal_handler("partial_connection");
	plugin->AddBifItem("partial_connection", plugin::BifItem::EVENT);
	::connection_partial_close = internal_handler("connection_partial_close");
	plugin->AddBifItem("connection_partial_close", plugin::BifItem::EVENT);
	::connection_finished = internal_handler("connection_finished");
	plugin->AddBifItem("connection_finished", plugin::BifItem::EVENT);
	::connection_half_finished = internal_handler("connection_half_finished");
	plugin->AddBifItem("connection_half_finished", plugin::BifItem::EVENT);
	::connection_rejected = internal_handler("connection_rejected");
	plugin->AddBifItem("connection_rejected", plugin::BifItem::EVENT);
	::connection_reset = internal_handler("connection_reset");
	plugin->AddBifItem("connection_reset", plugin::BifItem::EVENT);
	::connection_pending = internal_handler("connection_pending");
	plugin->AddBifItem("connection_pending", plugin::BifItem::EVENT);
	::connection_SYN_packet = internal_handler("connection_SYN_packet");
	plugin->AddBifItem("connection_SYN_packet", plugin::BifItem::EVENT);
	::connection_first_ACK = internal_handler("connection_first_ACK");
	plugin->AddBifItem("connection_first_ACK", plugin::BifItem::EVENT);
	::connection_EOF = internal_handler("connection_EOF");
	plugin->AddBifItem("connection_EOF", plugin::BifItem::EVENT);
	::tcp_packet = internal_handler("tcp_packet");
	plugin->AddBifItem("tcp_packet", plugin::BifItem::EVENT);
	::tcp_option = internal_handler("tcp_option");
	plugin->AddBifItem("tcp_option", plugin::BifItem::EVENT);
	::tcp_contents = internal_handler("tcp_contents");
	plugin->AddBifItem("tcp_contents", plugin::BifItem::EVENT);
	::tcp_rexmit = internal_handler("tcp_rexmit");
	plugin->AddBifItem("tcp_rexmit", plugin::BifItem::EVENT);
	::contents_file_write_failure = internal_handler("contents_file_write_failure");
	plugin->AddBifItem("contents_file_write_failure", plugin::BifItem::EVENT);

	}
} }


