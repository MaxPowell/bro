// This file was automatically generated by bifcl from /home/ubuntu/bro/src/analyzer/protocol/tcp/functions.bif (plugin mode).


#include "functions.bif.h"


#line 2 "functions.bif"

#include "analyzer/protocol/tcp/TCP.h"

#line 16 "functions.bif"
Val* BifFunc::bro_get_orig_seq(Frame* frame, val_list* BiF_ARGS)
	
#line 17 "functions.bif"
{
	if ( BiF_ARGS->length() != 1 )
		{
		reporter->Error("get_orig_seq() takes exactly 1 argument(s)");
		return 0;
		}
	Val* cid = (Val*) ((*BiF_ARGS)[0]);

#line 17 "functions.bif"

	Connection* c = sessions->FindConnection(cid);
	if ( ! c )
		return new Val(0, TYPE_COUNT);

	if ( c->ConnTransport() != TRANSPORT_TCP )
		return new Val(0, TYPE_COUNT);

	analyzer::Analyzer* tc = c->FindAnalyzer("TCP");
	if ( tc )
		return new Val(static_cast<analyzer::tcp::TCP_Analyzer*>(tc)->OrigSeq(),
				TYPE_COUNT);
	else
		{
		reporter->Error("connection does not have TCP analyzer");
		return new Val(0, TYPE_COUNT);
		}
	} // end of BifFunc::bro_get_orig_seq

#line 34 "functions.bif"

#line 46 "functions.bif"
Val* BifFunc::bro_get_resp_seq(Frame* frame, val_list* BiF_ARGS)
	
#line 47 "functions.bif"
{
	if ( BiF_ARGS->length() != 1 )
		{
		reporter->Error("get_resp_seq() takes exactly 1 argument(s)");
		return 0;
		}
	Val* cid = (Val*) ((*BiF_ARGS)[0]);

#line 47 "functions.bif"

	Connection* c = sessions->FindConnection(cid);
	if ( ! c )
		return new Val(0, TYPE_COUNT);

	if ( c->ConnTransport() != TRANSPORT_TCP )
		return new Val(0, TYPE_COUNT);

	analyzer::Analyzer* tc = c->FindAnalyzer("TCP");
	if ( tc )
		return new Val(static_cast<analyzer::tcp::TCP_Analyzer*>(tc)->RespSeq(),
				TYPE_COUNT);
	else
		{
		reporter->Error("connection does not have TCP analyzer");
		return new Val(0, TYPE_COUNT);
		}
	} // end of BifFunc::bro_get_resp_seq

#line 64 "functions.bif"

#line 97 "functions.bif"
Val* BifFunc::bro_set_contents_file(Frame* frame, val_list* BiF_ARGS)
	
#line 98 "functions.bif"
{
	if ( BiF_ARGS->length() != 3 )
		{
		reporter->Error("set_contents_file() takes exactly 3 argument(s)");
		return 0;
		}
	Val* cid = (Val*) ((*BiF_ARGS)[0]);
	bro_uint_t direction = (bro_uint_t) ((*BiF_ARGS)[1]->AsCount());
	BroFile* f = (BroFile*) ((*BiF_ARGS)[2]->AsFile());

#line 98 "functions.bif"

	Connection* c = sessions->FindConnection(cid);
	if ( ! c )
		return new Val(0, TYPE_BOOL);

	c->GetRootAnalyzer()->SetContentsFile(direction, f);
	return new Val(1, TYPE_BOOL);
	} // end of BifFunc::bro_set_contents_file

#line 105 "functions.bif"

#line 120 "functions.bif"
Val* BifFunc::bro_get_contents_file(Frame* frame, val_list* BiF_ARGS)
	
#line 121 "functions.bif"
{
	if ( BiF_ARGS->length() != 2 )
		{
		reporter->Error("get_contents_file() takes exactly 2 argument(s)");
		return 0;
		}
	Val* cid = (Val*) ((*BiF_ARGS)[0]);
	bro_uint_t direction = (bro_uint_t) ((*BiF_ARGS)[1]->AsCount());

#line 121 "functions.bif"

	Connection* c = sessions->FindConnection(cid);
	BroFile* f = c ? c->GetRootAnalyzer()->GetContentsFile(direction) : 0;

	if ( f )
		{
		Ref(f);
		return new Val(f);
		}

	// Return some sort of error value.
	if ( ! c )
		builtin_error("unknown connection id in get_contents_file()", cid);
	else
		builtin_error("no contents file for given direction");

	return new Val(new BroFile(stderr, "-", "w"));
	} // end of BifFunc::bro_get_contents_file

#line 138 "functions.bif"
