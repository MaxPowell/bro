// This file was automatically generated by bifcl from /home/ubuntu/bro/src/analyzer/protocol/ssh/events.bif (plugin mode).

#if defined(BRO_IN_NETVAR) || ! defined(_home_ubuntu_bro_my_build_dir_src_analyzer_protocol_ssh_events_bif)
#ifndef BRO_IN_NETVAR
#ifndef _home_ubuntu_bro_my_build_dir_src_analyzer_protocol_ssh_events_bif
#define _home_ubuntu_bro_my_build_dir_src_analyzer_protocol_ssh_events_bif
#include "bro-bif.h"
#endif
#endif

extern EventHandlerPtr ssh_server_version; 
namespace BifEvent {  void generate_ssh_server_version(analyzer::Analyzer* analyzer, Connection* c, StringVal* version);  } 
extern EventHandlerPtr ssh_client_version; 
namespace BifEvent {  void generate_ssh_client_version(analyzer::Analyzer* analyzer, Connection* c, StringVal* version);  } 
extern EventHandlerPtr ssh_auth_successful; 
namespace BifEvent {  void generate_ssh_auth_successful(analyzer::Analyzer* analyzer, Connection* c, int auth_method_none);  } 
extern EventHandlerPtr ssh_auth_attempted; 
namespace BifEvent {  void generate_ssh_auth_attempted(analyzer::Analyzer* analyzer, Connection* c, int authenticated);  } 
extern EventHandlerPtr ssh_capabilities; 
namespace BifEvent {  void generate_ssh_capabilities(analyzer::Analyzer* analyzer, Connection* c, StringVal* cookie, Val* capabilities);  } 
extern EventHandlerPtr ssh2_server_host_key; 
namespace BifEvent {  void generate_ssh2_server_host_key(analyzer::Analyzer* analyzer, Connection* c, StringVal* key);  } 
extern EventHandlerPtr ssh1_server_host_key; 
namespace BifEvent {  void generate_ssh1_server_host_key(analyzer::Analyzer* analyzer, Connection* c, StringVal* p, StringVal* e);  } 
extern EventHandlerPtr ssh_encrypted_packet; 
namespace BifEvent {  void generate_ssh_encrypted_packet(analyzer::Analyzer* analyzer, Connection* c, int orig, bro_uint_t len);  } 
extern EventHandlerPtr ssh2_dh_server_params; 
namespace BifEvent {  void generate_ssh2_dh_server_params(analyzer::Analyzer* analyzer, Connection* c, StringVal* p, StringVal* q);  } 
extern EventHandlerPtr ssh2_gss_error; 
namespace BifEvent {  void generate_ssh2_gss_error(analyzer::Analyzer* analyzer, Connection* c, bro_uint_t major_status, bro_uint_t minor_status, StringVal* err_msg);  } 
extern EventHandlerPtr ssh2_ecc_key; 
namespace BifEvent {  void generate_ssh2_ecc_key(analyzer::Analyzer* analyzer, Connection* c, int is_orig, StringVal* q);  } 

#endif
